"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _push = require("push.js/bin/push");

var _push2 = _interopRequireDefault(_push);

var _push3 = require("./constants/push");

var _config = require("./config");

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param dispatch
 * @param getState
 * @constructor
 */
var push = function push(_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
        return function (action) {
            var type = action.type,
                payload = action.payload;


            _push2.default.Permission.request();

            switch (type) {
                case _push3.PUSH_SET:
                    var message = payload.message,
                        _payload$visibility = payload.visibility,
                        visibility = _payload$visibility === undefined ? "show" : _payload$visibility,
                        config = payload.config;


                    var pushConfig = _extends({}, _config2.default, config);

                    //show when user is away
                    if (document.visibilityState === "hidden" && visibility === "hidden") {
                        _push2.default.create(message, pushConfig);
                    }

                    //show when user is on page
                    if (document.visibilityState !== "hidden" && visibility === "onPage") {
                        _push2.default.create(message, pushConfig);
                    }

                    //show when user is away or on page
                    if (visibility === "show") {
                        _push2.default.create(message, pushConfig);
                    }

                    break;
                default:
                    return next(action);
            }

            return next(action);
        };
    };
};

exports.default = push;
//# sourceMappingURL=push.js.map