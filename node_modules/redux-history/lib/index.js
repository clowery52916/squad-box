'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.locationReducer = locationReducer;
exports.connectHistory = connectHistory;
var UPDATE_LOCATION = '@@history/UPDATE_LOCATION';

var initialState = {

    pathname: null,
    search: null,
    hash: null,
    state: null,
    action: null,
    key: null

};

function locationReducer() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
    var action = arguments[1];

    if (action.type === UPDATE_LOCATION) {
        return Object.assign({}, state, action.payload);
    }
    return state;
}

function updateLocation(location) {
    return {
        type: UPDATE_LOCATION,
        payload: location
    };
}

function connectHistory(history, store) {

    var currentKey = undefined;

    function createUniqueKey(location) {
        var key = history.createPath(location);
        return key;
    }

    var unsubscribeHistory = history.listen(function (nextLocation) {
        var _store$getState = store.getState();

        var location = _store$getState.location;

        var key = createUniqueKey(location);
        currentKey = createUniqueKey(nextLocation);

        if (key !== currentKey) {
            store.dispatch(updateLocation(nextLocation));
        }
    });

    var unsubscribeStore = store.subscribe(function () {
        var _store$getState2 = store.getState();

        var location = _store$getState2.location;

        var key = createUniqueKey(location);

        if (key && key !== currentKey) {
            var method = location.action === 'REPLACE' ? 'replace' : 'push';
            history[method](location);
        }
    });

    return function unconnectHistory() {
        unsubscribeHistory();
        unsubscribeStore();
    };
}